{"version":3,"sources":["EverestPerson.svg","components/presentational/Project.tsx","pages/About.tsx","components/presentational/StyledLink.tsx","constants/projects.tsx","helpers/functions.ts","components/stateful/SearchInput.tsx","pages/Home.tsx","components/stateful/FormProject/FormProject.tsx","pages/CreateListing.tsx","pages/Proposal.tsx","pages/Proposals.tsx","components/stateful/ProjectWrapper.tsx","pages/Project/Application.tsx","pages/Project/Service.tsx","pages/Project/InfrastructureSingle.tsx","pages/Project/ContentSingle.tsx","components/stateful/ManyProjectsWrapper.tsx","types/Category.tsx","pages/Projects/Applications.tsx","pages/Projects/Services.tsx","pages/Projects/Infrastructure.tsx","pages/Projects/Content.tsx","components/stateful/ENSFetch.tsx","pages/ENS.tsx","theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Project","props","twitter","website","name","description","twitterUrl","twitterHandleDisplay","variant","target","href","aboutData","category","tagline","type","index","About","StyledLink","theme","useTheme","p","fontWeight","color","to","className","css","colors","primary","tertiary","children","applicationTypes","infrastructureTypes","serviceTypes","contentTypes","projectList","status","projectSubtypes","services","infrastructure","content","applications","getProjectsByCategory","projectCategory","filter","project","toLowerCase","includes","getProjectByIndex","getManyProjectsByIndex","getOpenProposals","getProjectSubtypes","SearchInput","useState","searchText","setSearchText","searchResults","setSearchResults","handleNewSearchText","filterProjectsResult","maxResults","slice","filterProjects","console","log","value","onChange","e","map","key","getUserFacingSlug","projectName","replace","Home","src","everestPerson","sx","width","borderRadius","flexWrap","mx","px","py","bg","FormGeneric","NewProjectSchema","Yup","shape","min","max","required","url","StyledBox","my","FormProject","initialValues","validationSchema","onSubmit","values","actions","alert","JSON","stringify","setSubmitting","render","isSubmitting","flexDirection","justifyContent","htmlFor","id","placeholder","component","msg","disabled","CreateListing","Proposal","slug","useParams","proposal","Proposals","match","ProjectWrapper","indexString","Application","Service","InfrastructureSingle","ContentSingle","Category","initialState","defi","daos","games","social","dex","collectibles","developmentframework","sidechains","userauthentication","statechannels","onboarding","testing","audits","development","legal","design","accounting","pr","podcasts","wikis","events","forums","news","getNonUserFacingSlug","reducer","state","action","newState","indexOf","ProjectsWrapper","projectSubtype","initialStateForCategory","useReducer","dispatch","checked","actionName","Applications","location","URLSearchParams","search","get","Services","Infrastructure","Content","EXCHANGE_RATES","gql","ENSFetch","useQuery","loading","error","data","domains","ENS","preset","text","background","secondary","muted","gray","highlight","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","space","sizes","avatar","radii","default","circle","shadows","card","fontFamily","lineHeight","display","fontSize","caps","textTransform","letterSpacing","variants","height","boxShadow","link","textDecoration","nav","buttons","outline","styles","root","client","ApolloClient","uri","AppRouter","alignItems","path","exact","Boolean","window","hostname","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44a4d0ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EverestPerson.b83557ef.svg\";","// TODO: Decide whether to fetch data for this project at a higher level and pass into this component, or whehter to fetch it here\n// For now assuming it will be a prop already here\n\nimport React from \"react\";\nimport { ProjectInterface } from \"../../types/ProjectInterface\";\n\nimport { Link } from \"rebass\";\n\nconst Project: React.FC<ProjectInterface> = props => {\n  // TODO: Use type or tagline?\n  const { twitter, website, name, description } = props;\n  const twitterUrl = `https://twitter.com/${twitter}`;\n  const twitterHandleDisplay = twitter ? `@${twitter}` : \"\";\n  return (\n    <div>\n      <h2>{name === \"Everest\" ? \"About Everest\" : name}</h2>\n      <p>\n        <b>Description:</b> {description}\n      </p>\n      <p>\n        <b>Website:</b>{\" \"}\n        {name === \"Everest\" ? (\n          \"You're on it dummy\"\n        ) : (\n          <Link variant=\"nav\" target=\"_blank\" href={website}>\n            {website}\n          </Link>\n        )}\n      </p>\n      <p>\n        <b>Twitter:</b>{\" \"}\n        <Link variant=\"nav\" target=\"_blank\" href={twitterUrl}>\n          {twitterHandleDisplay}\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport Project from \"../components/presentational/Project\";\n\nconst aboutData = {\n  name: \"Everest\",\n  category: \"applications\",\n  description:\n    \"universally shared ‘yellowpages’ registry for eth community. we use fancy tech like TCRs and bonding curves. we’re hiring. dm @Everest_TCR. we probably won’t respond. if we collaborate, we can line up all our ducks in a row.\",\n  twitter: \"Everest_TCR\",\n  website: \"\",\n  tagline: \"\",\n  type: \"\",\n  index: \"0\"\n};\n\nexport default function About() {\n  return (\n    <Project\n      name={aboutData.name}\n      category={aboutData.category}\n      tagline={aboutData.tagline}\n      website={aboutData.website}\n      twitter={aboutData.twitter}\n      description={aboutData.description}\n      type={aboutData.type}\n      index={aboutData.index}\n    />\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\n\nimport { css } from \"emotion\";\n\nimport { useTheme } from \"emotion-theming\";\n\nexport default function StyledLink(props: any) {\n  const theme: any = useTheme();\n  return (\n    <b>\n      <Text p={2} fontWeight=\"bold\" color=\"primary\">\n        <Link\n          to={props.to}\n          className={css`\n            padding: 24px;\n            color: ${theme.colors.primary};\n            font-size: 16px;\n            border-radius: 4px;\n            text-decoration: none;\n            &:hover {\n              color: ${theme.colors.tertiary};\n            }\n          `}\n        >\n          {props.children}\n        </Link>\n      </Text>\n    </b>\n  );\n}\n","export const projectCategories = [\n  \"applications\",\n  \"content\",\n  \"services\",\n  \"infrastructure\"\n];\n\n// Subtypes of each category\n\nexport const applicationTypes = [\n  \"DeFi\",\n  \"DAOs\",\n  \"games\",\n  \"social\",\n  \"DEX\",\n  \"collectibles\"\n];\n\n// TODO: Get clever and handle camelCase or hypens in\n// multi-word categories\n// To achieve that, make this into an array of objects with\n// name and slug keys\nexport const infrastructureTypes = [\n  \"development framework\",\n  \"sidechains\",\n  \"user authentication\",\n  \"state channels\",\n  \"onboarding\",\n  \"testing\"\n];\n\nexport const serviceTypes = [\n  \"audits\",\n  \"development\",\n  \"legal\",\n  \"design\",\n  \"accounting\",\n  \"PR\"\n];\n\nexport const contentTypes = [\"podcasts\", \"wikis\", \"events\", \"forums\", \"news\"];\n\n// The projects themselves:\nconst applications = [\n  {\n    index: \"1\",\n    status: \"approved\",\n    name: \"MetaCartel DAO\",\n    category: \"applications\",\n    type: \"DAO\",\n    tagline: \"we like dapps\",\n    website: \"https://www.metacartel.org/\",\n    twitter: \"meta_cartel\",\n    description: \"we like dapps\"\n  },\n  {\n    index: \"2\",\n    status: \"approved\",\n    name: \"PokeMol\",\n    category: \"applications\",\n    type: \"DAO\",\n    tagline: \"pocket moloch\",\n    website: \"\",\n    twitter: \"PocketMoloch\",\n    description:\n      \"Open Source Mobile-first @MolochDAO frontend with @abridged_io contract wallets ftw. By @odyssyautomaton\"\n  },\n  {\n    index: \"3\",\n    status: \"approved\",\n    name: \"Compound\",\n    category: \"applications\",\n    type: \"DeFi\",\n    tagline: \"Interest and borrowing, for the open financial system.\",\n    website: \"https://compound.finance/\",\n    twitter: \"compoundfinance\",\n    description:\n      \"Compound is an open-source, autonomous protocol built for developers, to unlock a universe of new financial applications. Interest and borrowing, for the open financial system.\"\n  },\n  {\n    index: \"4\",\n    status: \"approved\",\n    name: \"Mintbase\",\n    category: \"applications\",\n    type: \"collectibles\",\n    tagline: \"Digital assets minted and backed by you\",\n    website: \"https://mintbase.io/\",\n    twitter: \"mintbase\",\n    description: \"Digital assets minted and backed by you\"\n  },\n  {\n    index: \"5\",\n    status: \"approved\",\n    name: \"Pepper 4D\",\n    category: \"applications\",\n    type: \"games\",\n    tagline: \"gang gang gang\",\n    website: \"\",\n    twitter: \"\",\n    description: \"\"\n  },\n  {\n    index: \"6\",\n    status: \"approved\",\n    name: \"FrAnK\",\n    category: \"applications\",\n    type: \"social\",\n    tagline: \"what you looking at bish\",\n    website: \"\",\n    twitter: \"\",\n    description: \"\"\n  },\n  {\n    index: \"7\",\n    status: \"approved\",\n    name: \"YoloRekt\",\n    category: \"applications\",\n    type: \"games\",\n    tagline: \"we're definitely a finance game, not a casino\",\n    website: \"\",\n    twitter: \"\",\n    description: \"\"\n  }\n];\n\nconst infrastructure = [\n  {\n    index: \"8\",\n    status: \"approved\",\n    name: \"The Graph\",\n    category: \"infrastructure\",\n    type: \"indexing\",\n    tagline: \"A query protocol for blockchains\",\n    website: \"https://thegraph.com/\",\n    twitter: \"graphprotocol\",\n    description: \"A query protocol for blockchains\"\n  },\n  {\n    index: \"80\",\n    status: \"approved\",\n    name: \"Connext\",\n    category: \"infrastructure\",\n    type: \"state channels\",\n    tagline:\n      \"An infrastructure layer that scales Ethereum by enabling instant, low cost transactions.\",\n    website: \"https://connext.network/\",\n    twitter: \"ConnextNetwork\",\n    description:\n      \"An infrastructure layer that scales Ethereum by enabling instant, low cost transactions.\"\n  }\n];\n\nconst content = [\n  {\n    index: \"9\",\n    status: \"approved\",\n    name: \"EthHub\",\n    category: \"content\",\n    type: \"information\",\n    tagline: \"EthHub provides research and resources to learn about Ethereum\",\n    website: \"https://ethhub.io/\",\n    twitter: \"ethhub_io\",\n    description:\n      \"EthHub provides research and resources to learn about Ethereum\"\n  },\n  {\n    index: \"90\",\n    status: \"approved\",\n    name: \"Wizard of Dapps\",\n    category: \"content\",\n    type: \"podcasts\",\n    tagline:\n      \"A end user focused podcast about how decentralised applications are built. Tech stacks, business models & user growth. Hosted by @pet3rpan_ & @b_dsylva\",\n    website: \"https://wizardofdapps.fm/\",\n    twitter: \"wizardofdapps\",\n    description:\n      \"A end user focused podcast about how decentralised applications are built. Tech stacks, business models & user growth. Hosted by @pet3rpan_ & @b_dsylva\"\n  }\n];\n\nconst services = [\n  {\n    index: \"10\",\n    status: \"approved\",\n    name: \"OpenZeppelin\",\n    category: \"services\",\n    type: \"audits\",\n    tagline: \"Security audits for distributed systems\",\n    website: \"https://openzeppelin.com/security-audits/\",\n    twitter: \"openzeppelin\",\n    description:\n      \"OpenZeppelin verifies that your distributed systems work as intended by performing an audit. Our engineers fully review your system’s architecture and codebase, and then write a thorough report that includes actionable feedback for every issue found. \"\n  },\n  {\n    index: \"101\",\n    status: \"approved\",\n    name: \"Paul Cowgill\",\n    category: \"services\",\n    type: \"development\",\n    tagline: \"Freelance full-stack Ethereum software engineering\",\n    website: \"https://cowgill.io\",\n    twitter: \"paulcowgill\",\n    description: \"Freelance full-stack Ethereum software engineering\"\n  }\n];\n\n// Proposal status an enum of possible states like\n// rejected, voting, reveal, approved, etc.\nconst proposals = [\n  {\n    index: \"11\",\n    status: \"voting\",\n    name: \"MetaCartel DAO\",\n    category: \"applications\",\n    type: \"DAO\",\n    tagline: \"we like dapps\",\n    website: \"https://www.metacartel.org/\",\n    twitter: \"meta_cartel\",\n    description: \"we like dapps\"\n  },\n  {\n    index: \"12\",\n    status: \"voting\",\n    name: \"PokeMol\",\n    category: \"applications\",\n    type: \"DAO\",\n    tagline: \"pocket moloch\",\n    website: \"\",\n    twitter: \"PocketMoloch\",\n    description:\n      \"Open Source Mobile-first @MolochDAO frontend with @abridged_io contract wallets ftw. By @odyssyautomaton\"\n  }\n];\n\n// TODO: Decide if this spread approach is the preferred\n// way to do this concat\nexport const projectList = [\n  ...applications,\n  ...services,\n  ...content,\n  ...infrastructure,\n  ...proposals\n];\n\nexport const projectSubtypes = {\n  services: serviceTypes,\n  infrastructure: infrastructureTypes,\n  content: contentTypes,\n  applications: applicationTypes\n};\n","import { projectList, projectSubtypes } from \"../constants/projects\";\nimport { Category } from \"../types/Category\";\n\nexport const getProjectsByCategory = (projectCategory: string) => {\n  return projectList.filter(project => {\n    if (\n      project.category.toLowerCase().includes(projectCategory.toLowerCase())\n    ) {\n      // TODO: Filter out those with a status of \"voting\", \"rejected\", etc.\n      return true;\n    }\n    return false;\n  });\n};\n\nconst getManyProjectsByIndex = (index: string) => {\n  return projectList.filter(project => {\n    if (project.index === index) {\n      return true;\n    }\n    return false;\n  });\n};\n\nexport const getProjectByIndex = (index: string) => {\n  const projectsByIndex = getManyProjectsByIndex(index);\n  // Note: Allows for duplicate indices, which should be impossible.\n  // Consider enforcing uniqueness and erroring out.\n\n  return projectsByIndex[0];\n};\n\nexport const getOpenProposals = () => {\n  return projectList.filter(project => {\n    if (project.status === \"voting\") {\n      return true;\n    }\n    return false;\n  });\n};\n\nexport const getProjectSubtypes = (projectCategory: Category) => {\n  return projectSubtypes[projectCategory];\n};\n\n// TODO: Use a less trivial implementation for search\n// that allows for typos, etc.\nexport const filterProjects = (searchText: string, maxResults: number) => {\n  // TODO: Filter out those with a status of \"voting\", \"rejected\", etc.\n  return projectList\n    .filter(project => {\n      if (project.name.toLowerCase().includes(searchText.toLowerCase())) {\n        return true;\n      }\n      if (project.type.includes(searchText)) {\n        return true;\n      }\n      if (project.category.includes(searchText)) {\n        return true;\n      }\n      if (project.description.includes(searchText)) {\n        return true;\n      }\n      if (project.tagline.includes(searchText)) {\n        return true;\n      }\n      if (project.twitter.includes(searchText)) {\n        return true;\n      }\n      if (project.website.includes(searchText)) {\n        return true;\n      }\n      return false;\n    })\n    .slice(0, maxResults);\n};\n","import React, { FunctionComponent, useState } from \"react\";\n\nimport StyledLink from \"../presentational/StyledLink\";\n\nimport { ProjectInterface } from \"../../types/ProjectInterface\";\n\nimport { filterProjects } from \"../../helpers/functions\";\n\n// TODO: Consider extracting the search input component into\n// a presentational component where the function to handle changes\n// is passed in from a parent stateful component that uses useState\nconst SearchInput: FunctionComponent<{}> = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState<ProjectInterface[]>([]);\n\n  const handleNewSearchText = (searchText: string) => {\n    const filterProjectsResult = filterProjects(searchText, 8);\n    console.log(filterProjectsResult);\n\n    setSearchText(searchText);\n    // TODO: Get the typing working for all possible\n    // outputs of this function\n    setSearchResults(filterProjectsResult);\n    // TODO: Debounce search to wait for a few seconds before\n    // searching again\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          value={searchText}\n          onChange={e => handleNewSearchText(e.target.value)}\n        />\n        {/* Maybe DRY up the way this list is shown */}\n        {searchResults.map(({ name, category, index }) => {\n          // TODO: Lookup the project type in the right category\n          // to get the right index, or even better, move the\n          // project indexing system to something doesn't have a separate\n          // subindex under each project type\n          return (\n            <p key={index}>\n              <StyledLink to={`/${category}/${index}`}>{name}</StyledLink>\n            </p>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React from \"react\";\nimport everestPerson from \"../EverestPerson.svg\";\n\nimport { Box, Flex, Text, Image } from \"rebass\";\nimport StyledLink from \"../components/presentational/StyledLink\";\n// TODO: Try using StyledLink from React Router again to see if it fixes 404\n\nimport SearchInput from \"../components/stateful/SearchInput\";\n\nimport {\n  applicationTypes,\n  infrastructureTypes,\n  serviceTypes,\n  contentTypes\n} from \"../constants/projects\";\n\nfunction getUserFacingSlug(projectName: string) {\n  return projectName.toLowerCase().replace(/\\s/g, \"-\");\n}\n\nexport default function Home() {\n  return (\n    <div>\n      <h2>Everest</h2>\n      <Image\n        src={everestPerson}\n        sx={{\n          width: [\"100%\", \"40%\", \"10%\"],\n          borderRadius: 8\n        }}\n      />\n      <SearchInput />\n      {/* TODO: Maybe DRY these four sections up with a map */}\n      <Flex flexWrap=\"wrap\" mx={-2}>\n        <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]}>\n          <Text p={1} color=\"background\" bg=\"highlight\">\n            <h3>\n              <StyledLink to={`/applications`}>Applications</StyledLink>\n            </h3>\n          </Text>\n          <Text p={1} color=\"background\" bg=\"muted\">\n            {applicationTypes.map((name, index) => {\n              const filter = getUserFacingSlug(name);\n              return (\n                <p key={name}>\n                  <StyledLink to={`/applications?projectSubtype=${filter}`}>\n                    {name}\n                  </StyledLink>\n                </p>\n              );\n            })}\n          </Text>\n        </Box>\n        <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]}>\n          <Text p={1} color=\"background\" bg=\"highlight\">\n            <h3>\n              <StyledLink to={`/infrastructure`}>Infrastructure</StyledLink>\n            </h3>\n          </Text>\n          <Text p={1} color=\"background\" bg=\"muted\">\n            {infrastructureTypes.map((name, index) => {\n              const filter = getUserFacingSlug(name);\n              return (\n                <p key={name}>\n                  <StyledLink to={`/infrastructure?projectSubtype=${filter}`}>\n                    {name}\n                  </StyledLink>\n                </p>\n              );\n            })}\n          </Text>\n        </Box>\n        <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]}>\n          <Text p={1} color=\"background\" bg=\"highlight\">\n            <h3>\n              <StyledLink to={`/services`}>Services</StyledLink>\n            </h3>\n          </Text>\n          <Text p={1} color=\"background\" bg=\"muted\">\n            {serviceTypes.map((name, index) => {\n              const filter = getUserFacingSlug(name);\n              return (\n                <p key={name}>\n                  <StyledLink to={`/services?projectSubtype=${filter}`}>\n                    {name}\n                  </StyledLink>\n                </p>\n              );\n            })}\n          </Text>\n        </Box>\n        <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]}>\n          <Text p={1} color=\"background\" bg=\"highlight\">\n            <h3>\n              <StyledLink to={`/content`}>Content</StyledLink>\n            </h3>\n          </Text>\n          <Text p={1} color=\"background\" bg=\"muted\">\n            {contentTypes.map((name, index) => {\n              const filter = getUserFacingSlug(name);\n              return (\n                // TODO: A div shouldn't be a descendant of\n                // a p element\n                <p key={name}>\n                  <StyledLink to={`/content?projectSubtype=${filter}`}>\n                    {name}\n                  </StyledLink>\n                </p>\n              );\n            })}\n          </Text>\n        </Box>\n      </Flex>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ProjectInterface } from \"../../../types/ProjectInterface\";\n\nimport { Flex, Box } from \"rebass\";\n\nconst FormGeneric: React.FC<{ children: any }> = props => {\n  return <div>{props.children}</div>;\n};\n\nconst NewProjectSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  website: Yup.string()\n    .url()\n    .required(\"Required\"),\n  twitter: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  description: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(1000, \"Too Long!\")\n});\n\nconst StyledBox: React.FC<{ children: any }> = props => {\n  return (\n    <Box width={1} px={2} my={2}>\n      {props.children}\n    </Box>\n  );\n};\n\nconst FormProject: React.FC<{}> = () => {\n  const initialValues: ProjectInterface = {\n    name: \"\",\n    category: \"\",\n    website: \"https://\",\n    twitter: \"\",\n    description: \"\",\n    type: \"\",\n    tagline: \"\",\n    index: \"\"\n  };\n  return (\n    <FormGeneric>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={NewProjectSchema}\n        onSubmit={(values, actions) => {\n          console.log({ values, actions });\n          alert(JSON.stringify(values, null, 2));\n          actions.setSubmitting(false);\n        }}\n        render={({ status, isSubmitting }) => (\n          <Flex\n            mx={-2}\n            flexWrap=\"wrap\"\n            flexDirection=\"row\"\n            justifyContent=\"center\"\n          >\n            <Form>\n              <h2>Create a listing</h2>\n              <StyledBox>\n                <label htmlFor=\"name\">Name</label>\n              </StyledBox>\n              <StyledBox>\n                <Field type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\" />\n              </StyledBox>\n              <StyledBox>\n                <ErrorMessage name=\"name\" component=\"div\" />\n              </StyledBox>\n              {/* TODO: Add category */}\n\n              <StyledBox>\n                <label htmlFor=\"website\">Website</label>\n              </StyledBox>\n              <StyledBox>\n                <Field\n                  type=\"text\"\n                  id=\"website\"\n                  name=\"website\"\n                  placeholder=\"https://\"\n                />\n              </StyledBox>\n              <StyledBox>\n                <ErrorMessage name=\"website\" component=\"div\" />\n              </StyledBox>\n              <StyledBox>\n                <label htmlFor=\"twitter\">Twitter</label>\n              </StyledBox>\n              <StyledBox>\n                <Field\n                  type=\"text\"\n                  id=\"twitter\"\n                  name=\"twitter\"\n                  placeholder=\"@jack\"\n                />\n              </StyledBox>\n              <StyledBox>\n                <ErrorMessage name=\"twitter\" component=\"div\" />\n              </StyledBox>\n              <StyledBox>\n                <label htmlFor=\"description\">Description</label>\n              </StyledBox>\n              <StyledBox>\n                <Field\n                  type=\"text\"\n                  component=\"textarea\"\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"This project...\"\n                />\n              </StyledBox>\n              <StyledBox>\n                <ErrorMessage name=\"name\" component=\"div\" />\n              </StyledBox>\n              <StyledBox>\n                {status && status.msg && <div>{status.msg}</div>}\n              </StyledBox>\n              <StyledBox>\n                <button type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </button>\n              </StyledBox>\n            </Form>\n          </Flex>\n        )}\n      />\n    </FormGeneric>\n  );\n};\n\nexport default FormProject;\n","import React from \"react\";\nimport FormProject from \"../components/stateful/FormProject/FormProject\";\n\nexport default function CreateListing() {\n  return <FormProject />;\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Project from \"../components/presentational/Project\";\n\nimport { getProjectByIndex } from \"../helpers/functions\";\n\nexport default function Proposal() {\n  const { slug } = useParams();\n  console.log({ slug });\n  const indexString = slug ? slug : \"0\";\n\n  const proposal = getProjectByIndex(indexString);\n  console.log(proposal);\n  return (\n    <Project\n      name={proposal.name}\n      category={proposal.category}\n      tagline={proposal.tagline}\n      website={proposal.website}\n      twitter={proposal.twitter}\n      description={proposal.description}\n      type={proposal.type}\n      index={proposal.index}\n    />\n  );\n}\n","import React from \"react\";\nimport { getOpenProposals } from \"../helpers/functions\";\nimport StyledLink from \"../components/presentational/StyledLink\";\nexport default function Proposals({ match }: any) {\n  return (\n    <div>\n      <h1>Proposals</h1>\n      {getOpenProposals().map(({ name, index }) => {\n        return (\n          <p key={index}>\n            <StyledLink to={`/proposals/${index}`}>{name}</StyledLink>\n          </p>\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Project from \"../presentational/Project\";\nimport { getProjectByIndex } from \"../../helpers/functions\";\n\nimport { Category } from \"../../types/Category\";\nimport { ProjectInterface } from \"../../types/ProjectInterface\";\n\nexport default function ProjectWrapper(props: any) {\n  const { slug } = useParams();\n  console.log({ slug });\n  const indexString = slug ? slug : \"0\";\n  const category: Category = props.category;\n  // TODO: If we start having an index input\n  // that isn't the position of the element\n  // in the array, then we'll have to switch to a\n  // filter by id option, which will work too\n\n  // TODO: Change from any to a proper type\n  const project: ProjectInterface = getProjectByIndex(indexString);\n  console.log(project);\n  return (\n    <Project\n      name={project.name}\n      category={project.category}\n      tagline={project.tagline}\n      website={project.website}\n      twitter={project.twitter}\n      description={project.description}\n      type={project.type}\n      index={project.index}\n    />\n  );\n}\n","import React from \"react\";\n\nimport ProjectWrapper from \"../../components/stateful/ProjectWrapper\";\n\nexport default function Application() {\n  const inputCategory = \"applications\";\n  return <ProjectWrapper category={inputCategory} />;\n}\n","import React from \"react\";\n\nimport ProjectWrapper from \"../../components/stateful/ProjectWrapper\";\n\nexport default function Service() {\n  const inputCategory = \"services\";\n  return <ProjectWrapper category={inputCategory} />;\n}\n","import React from \"react\";\n\nimport ProjectWrapper from \"../../components/stateful/ProjectWrapper\";\n\nexport default function InfrastructureSingle() {\n  const inputCategory = \"infrastructure\";\n  return <ProjectWrapper category={inputCategory} />;\n}\n","import React from \"react\";\n\nimport ProjectWrapper from \"../../components/stateful/ProjectWrapper\";\n\nexport default function ContentSingle() {\n  const inputCategory = \"content\";\n  return <ProjectWrapper category={inputCategory} />;\n}\n","import React, { useReducer } from \"react\";\n\nimport { Flex, Box } from \"rebass\";\nimport StyledLink from \"../presentational/StyledLink\";\n\nimport { Category } from \"../../types/Category\";\n\nimport {\n  getProjectsByCategory,\n  getProjectSubtypes\n} from \"../../helpers/functions\";\n\n// TODO: Generalize this component to work for services, infrastructure, and content too, and just pass a type prop in\n\n// TODO: Make dynamic\ninterface ApplicationFilterState {\n  daos: boolean;\n  defi: boolean;\n  games: boolean;\n  social: boolean;\n  dex: boolean;\n  collectibles: boolean;\n}\n\ninterface ContentFilterState {\n  podcasts: boolean;\n  wikis: boolean;\n  events: boolean;\n  forums: boolean;\n  news: boolean;\n}\n\ninterface ServicesFilterState {\n  audits: boolean;\n  development: boolean;\n  legal: boolean;\n  design: boolean;\n  accounting: boolean;\n  pr: boolean;\n}\n\ninterface InfrastructureFilterState {\n  developmentframework: boolean;\n  sidechains: boolean;\n  userauthentication: boolean;\n  statechannels: boolean;\n  onboarding: boolean;\n  testing: boolean;\n}\n\nconst initialStateApplications: ApplicationFilterState = {\n  defi: true,\n  daos: true,\n  games: true,\n  social: true,\n  dex: true,\n  collectibles: true\n};\n\nconst initialStateInfrastructure: InfrastructureFilterState = {\n  developmentframework: true,\n  sidechains: true,\n  userauthentication: true,\n  statechannels: true,\n  onboarding: true,\n  testing: true\n};\n\nconst initialStateServices: ServicesFilterState = {\n  audits: true,\n  development: true,\n  legal: true,\n  design: true,\n  accounting: true,\n  pr: true\n};\n\nconst initialStateContent: ContentFilterState = {\n  podcasts: true,\n  wikis: true,\n  events: true,\n  forums: true,\n  news: true\n};\n\nconst initialState: any = {\n  applications: initialStateApplications,\n  infrastructure: initialStateInfrastructure,\n  services: initialStateServices,\n  content: initialStateContent\n};\n\nfunction getNonUserFacingSlug(projectName: string) {\n  return projectName.toLowerCase().replace(/\\s/g, \"\");\n}\n\nfunction reducer(state: any, action: any) {\n  console.log(action.type);\n  let newState;\n  // Used for setting all values at once\n  // based on query param\n  if (action.type.indexOf(\"single\") !== -1) {\n    console.log(\"Special action\");\n    return state;\n  } else {\n    // Used when user toggles\n    newState = {\n      ...state,\n      ...{\n        [action.type]: !state[action.type]\n      }\n    };\n    console.log(newState);\n    return newState;\n  }\n}\n\ninterface Props {\n  category: Category;\n  projectSubtype?: string;\n}\n\n// (No hyphens is more useful internally because it lets you directly use\n// the name as the key in an object without the editor getting upset)\nfunction getNonUserFacingSlugFromUserFacing(projectName: string) {\n  return projectName.toLowerCase().replace(/-/g, \"\");\n}\n\nexport default function ProjectsWrapper({ category, projectSubtype }: Props) {\n  console.log({ projectSubtype });\n  const initialStateForCategory = initialState[category];\n  console.log({ initialStateForCategory });\n  const [state, dispatch] = useReducer(reducer, initialStateForCategory);\n\n  // TODO: Use React Router query param to determine initial state\n  // Do something like this but with useEffect so it's after\n  // the first render:\n  // if (!!projectSubtype) {\n  //   const projectSubtypeSlug = getNonUserFacingSlugFromUserFacing(\n  //     projectSubtype\n  //   );\n  //   dispatch({ type: `single-projectSubtypeSlug` });\n  // }\n  return (\n    <Flex flexWrap=\"wrap\">\n      <Box px={2} py={2} width={[1, 1 / 2, 3 / 4]}>\n        <h1>{category}</h1>\n        {getProjectsByCategory(category).map(({ name, index }) => {\n          // TODO: Start using an index from the object\n          // itself, and not using the index from the\n          // map operation\n          return (\n            <p key={index}>\n              <StyledLink to={`/${category}/${index}`}>{name}</StyledLink>\n            </p>\n          );\n        })}\n      </Box>\n      <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]} bg=\"muted\">\n        <h3>Filters</h3>\n\n        <form>\n          {getProjectSubtypes(category).map((projectSubtype, index) => (\n            <p key={index}>\n              <label>\n                {projectSubtype}{\" \"}\n                <input\n                  name={projectSubtype}\n                  type=\"checkbox\"\n                  // TODO: Make checked use state\n                  checked={state[getNonUserFacingSlug(projectSubtype)]}\n                  onChange={e => {\n                    console.log(e.target);\n                    // Note: Right now the regex doesn't do anything\n                    // since the input is always forced to be one word\n                    // This may change if we want to handle spaces differently\n                    const actionName = `${getNonUserFacingSlug(\n                      projectSubtype\n                    )}`;\n                    dispatch({ type: actionName });\n                    // setEnabledTypes(e.target.value);\n                  }}\n                />\n              </label>\n            </p>\n          ))}\n        </form>\n      </Box>\n    </Flex>\n  );\n}\n","export enum Category {\n  services = \"services\",\n  infrastructure = \"infrastructure\",\n  content = \"content\",\n  applications = \"applications\"\n}\n","import React from \"react\";\n\nimport ProjectsWrapper from \"../../components/stateful/ManyProjectsWrapper\";\n\nimport { Category } from \"../../types/Category\";\n\nexport default function Applications({ location }: any) {\n  let params = new URLSearchParams(location.search);\n  const projectSubtype: string | null = params.get(\"projectSubtype\");\n  const category: Category = Category.applications;\n\n  return projectSubtype ? (\n    <ProjectsWrapper category={category} projectSubtype={projectSubtype} />\n  ) : (\n    <ProjectsWrapper category={category} />\n  );\n}\n","import React from \"react\";\n\nimport ProjectsWrapper from \"../../components/stateful/ManyProjectsWrapper\";\n\nimport { Category } from \"../../types/Category\";\n\nexport default function Services({ location }: any) {\n  let params = new URLSearchParams(location.search);\n  const projectSubtype: string | null = params.get(\"projectSubtype\");\n  const category: Category = Category.services;\n\n  return projectSubtype ? (\n    <ProjectsWrapper category={category} projectSubtype={projectSubtype} />\n  ) : (\n    <ProjectsWrapper category={category} />\n  );\n}\n","import React from \"react\";\n\nimport ProjectsWrapper from \"../../components/stateful/ManyProjectsWrapper\";\n\nimport { Category } from \"../../types/Category\";\n\nexport default function Infrastructure({ location }: any) {\n  let params = new URLSearchParams(location.search);\n  const projectSubtype: string | null = params.get(\"projectSubtype\");\n  const category: Category = Category.infrastructure;\n\n  return projectSubtype ? (\n    <ProjectsWrapper category={category} projectSubtype={projectSubtype} />\n  ) : (\n    <ProjectsWrapper category={category} />\n  );\n}\n","import React from \"react\";\n\nimport ProjectsWrapper from \"../../components/stateful/ManyProjectsWrapper\";\n\nimport { Category } from \"../../types/Category\";\n\nexport default function Content({ location }: any) {\n  let params = new URLSearchParams(location.search);\n  const projectSubtype: string | null = params.get(\"projectSubtype\");\n  const category: Category = Category.content;\n\n  return projectSubtype ? (\n    <ProjectsWrapper category={category} projectSubtype={projectSubtype} />\n  ) : (\n    <ProjectsWrapper category={category} />\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst EXCHANGE_RATES = gql`\n  {\n    domains(first: 10) {\n      name\n    }\n  }\n`;\n\nexport default function ENSFetch() {\n  const { loading, error, data } = useQuery(EXCHANGE_RATES);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.domains.map(({ name }: any) => (\n    <div key={name}>\n      <p>{name}</p>\n    </div>\n  ));\n}\n","import React from \"react\";\nimport ENSFetch from \"../components/stateful/ENSFetch\";\nexport default function ENS() {\n  return (\n    <div>\n      <h2>ENS names</h2>\n      <ENSFetch />\n    </div>\n  );\n}\n","// default theme preset\n\nexport const preset = {\n  colors: {\n    text: \"#000\",\n    background: \"#fff\",\n    primary: \"#07c\",\n    secondary: \"#30c\",\n    tertiary: \"#dd0\",\n    muted: \"#f6f6f9\",\n    gray: \"#dddddf\",\n    highlight: \"hsla(205, 100%, 40%, 0.125)\"\n  },\n  fonts: {\n    body: \"system-ui, sans-serif\",\n    heading: \"inherit\",\n    monospace: \"Menlo, monospace\"\n  },\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.25\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  sizes: {\n    avatar: 48\n  },\n  radii: {\n    default: 4,\n    circle: 99999\n  },\n  shadows: {\n    card: \"0 0 4px rgba(0, 0, 0, .125)\"\n  },\n  // rebass variants\n  text: {\n    heading: {\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\"\n    },\n    display: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      fontSize: [5, 6, 7]\n    },\n    caps: {\n      textTransform: \"uppercase\",\n      letterSpacing: \"0.1em\"\n    }\n  },\n  variants: {\n    avatar: {\n      width: \"avatar\",\n      height: \"avatar\",\n      borderRadius: \"circle\"\n    },\n    card: {\n      p: 2,\n      bg: \"background\",\n      boxShadow: \"card\"\n    },\n    link: {\n      color: \"primary\",\n      textDecoration: \"none\",\n      \":hover,:focus,.active\": {\n        color: \"secondary\"\n      }\n    },\n    nav: {\n      fontSize: 1,\n      fontWeight: \"bold\",\n      display: \"inline-block\",\n      p: 2,\n      color: \"inherit\",\n      textDecoration: \"none\",\n      \":hover,:focus,.active\": {\n        color: \"primary\"\n      }\n    }\n  },\n  buttons: {\n    primary: {\n      fontSize: 2,\n      fontWeight: \"bold\",\n      color: \"background\",\n      bg: \"primary\",\n      borderRadius: \"default\"\n    },\n    outline: {\n      variant: \"buttons.primary\",\n      color: \"primary\",\n      bg: \"transparent\",\n      boxShadow: \"inset 0 0 2px\"\n    },\n    secondary: {\n      variant: \"buttons.primary\",\n      color: \"background\",\n      bg: \"secondary\"\n    }\n  },\n  styles: {\n    root: {\n      fontFamily: \"body\",\n      fontWeight: \"body\",\n      lineHeight: \"body\"\n    }\n  }\n};\n\nexport default preset;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport About from \"./pages/About\";\nimport Home from \"./pages/Home\";\nimport CreateListing from \"./pages/CreateListing\";\n\nimport Proposal from \"./pages/Proposal\";\nimport Proposals from \"./pages/Proposals\";\n\nimport Application from \"./pages/Project/Application\";\nimport Service from \"./pages/Project/Service\";\nimport InfrastructureSingle from \"./pages/Project/InfrastructureSingle\";\nimport ContentSingle from \"./pages/Project/ContentSingle\";\n\nimport Applications from \"./pages/Projects/Applications\";\nimport Services from \"./pages/Projects/Services\";\nimport Infrastructure from \"./pages/Projects/Infrastructure\";\nimport Content from \"./pages/Projects/Content\";\n\nimport ENS from \"./pages/ENS\";\n\nimport StyledLink from \"./components/presentational/StyledLink\";\n\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\n\nimport { ThemeProvider } from \"emotion-theming\";\nimport theme from \"./theme\";\n\nimport { Box, Flex } from \"rebass\";\n\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/ensdomains/ens\"\n});\n\nfunction AppRouter() {\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <div>\n            {/* TODO: Extract nav bar into component */}\n            <Flex\n              flexWrap=\"wrap\"\n              px={2}\n              color=\"white\"\n              bg=\"black\"\n              alignItems=\"center\"\n            >\n              {/* TODO: Handle look when text wraps to two lines\n              or prevent that from happening */}\n              <Box width={[1, 1 / 5, 1 / 6]}>\n                <StyledLink to=\"/\">Everest</StyledLink>\n              </Box>\n              <Box mx=\"auto\" />\n              <Box width={[1, 1 / 5, 1 / 6]}>\n                <StyledLink to=\"/create-listing\">Create a listing</StyledLink>\n              </Box>\n              <Box width={[1, 1 / 5, 1 / 6]}>\n                <StyledLink to=\"/proposals\">View proposals</StyledLink>\n              </Box>\n              <Box width={[1, 1 / 5, 1 / 6]}>\n                <StyledLink to=\"/about\">About</StyledLink>\n              </Box>\n              <Box width={[1, 1 / 5, 1 / 6]}>\n                <StyledLink to=\"/ens\">ENS names</StyledLink>\n              </Box>\n            </Flex>\n            <header>\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/create-listing/\" component={CreateListing} />\n                {/* Note: Proposal must be before proposals */}\n                <Route path=\"/proposals/:slug\" component={Proposal} />\n                <Route path=\"/proposals/\" component={Proposals} />\n                {/* Note: Application must be before applications */}\n                <Route path=\"/applications/:slug\" component={Application} />\n                <Route path=\"/applications/\" component={Applications} />\n                <Route path=\"/services/:slug\" component={Service} />\n                <Route path=\"/services/\" component={Services} />\n                <Route\n                  path=\"/infrastructure/:slug\"\n                  component={InfrastructureSingle}\n                />\n                <Route path=\"/infrastructure/\" component={Infrastructure} />\n                <Route path=\"/content/:slug\" component={ContentSingle} />\n                <Route path=\"/content/\" component={Content} />\n                <Route path=\"/about/\" component={About} />\n                <Route path=\"/ens/\" component={ENS} />\n              </Switch>\n            </header>\n          </div>\n        </Router>\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}